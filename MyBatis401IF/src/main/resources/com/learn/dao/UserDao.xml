<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.learn.dao.UserDao"><!-- UserDao接口的全限定类名 -->

    <!-- 配置 查询结果的列名 和 实体类的属性名 的对应关系 -->
    <resultMap id="userMap" type="com.learn.domain.User">
        <!-- property类中属性名 column数据库列名  -->
        <!-- 主键字段的对应 -->
        <id property="id" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
    </resultMap>

    <!-- 抽取重复的sql语句 -->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!-- 配置查询所有 id是方法名 -->
    <select id="findAll" resultType="com.learn.domain.User"><!-- 实体类 全限定类名 封装成啥 -->
        <!-- SQL语句 -->
        <!--select * from user;-->
        <include refid="defaultUser"></include>
    </select>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="int" resultType="com.learn.domain.User">
        select * from user
        where id = #{suibianxie}
    </select>
    
    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="string" resultType="com.learn.domain.User">
        <!-- 只支持这种注释 -->
        <!-- 预处理方式 %调用时传 这里 这好像不能加  -->
        <!-- select * from user
        where username like #{usernamesuibianxie} -->

        <!-- 字符串拼接 这里接收的值 必须写value 源码写死了 '${}' #{} -->
        select * from user
        where username like '%${value}%'
    </select>

    <!-- 根据QueryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.learn.domain.QueryVo" resultType="com.learn.domain.User">
        select * from user where username like #{user.username}
    </select>

    <!-- 根据条件查询 -->
    <!-- if -->
<!--    <select id="findUserByCondition" parameterType="com.learn.domain.User" resultType="com.learn.domain.User">
        select * from user where 1=1
        <if test="username != null">&lt;!&ndash; 这的username是实体类中的属性 &ndash;&gt;
            and username=#{username}
        </if>
    </select>-->
    <select id="findUserByCondition" parameterType="com.learn.domain.User" resultType="com.learn.domain.User">
        select * from user
        <where> <!-- 不用写 1=1了 -->
            <if test="username != null"><!-- 这的username是实体类中的属性 -->
                and username=#{username}
            </if>
            <if test="sex != null">
                and sex=#{sex}
            </if>
        </where>
    </select>
    
    <!-- 根据queryvo中的Id集合实现查询用户列表 -->
    <select id="findUserInIds" parameterType="com.learn.domain.QueryVo" resultType="com.learn.domain.User">
        /*select * from user*/
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in(" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>
